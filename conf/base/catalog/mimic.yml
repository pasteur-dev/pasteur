# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/05_${base_location}/01_data_catalog.html

# mimic_keys.in:
#   type: pandas.SQLQueryDataSet
#   sql: "select subject_id from mimic_core.patients order by subject_id;"
#   credentials: mimic_db

#
# Raw
#
_mimic_in_csv: &mimic_csv
  type: pandas.CSVDataSet
  layer: raw
  filepath: ""

mimic.raw@core_patients:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/core/patients.csv.gz
  load_args:
    index_col: subject_id
    parse_dates: [dod]
    dtype:
      subject_id: int32
      gender: category

mimic.raw@core_transfers:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/core/transfers.csv.gz
  load_args:
    index_col: transfer_id
    parse_dates: [intime, outtime]
    dtype:
      subject_id: int32
      hadm_id: Int32
      transfer_id: int32
      eventtype: category

mimic.raw@core_admissions:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/core/admissions.csv.gz
  load_args:
    index_col: hadm_id
    parse_dates: [admittime, dischtime, deathtime, edregtime, edouttime]
    dtype:
      subject_id: int32
      hadm_id: int32
      admission_type: category
      insurance: category
      language: category
      marital_status: category
      ethnicity: category

mimic.raw@hosp_d_hcpcs:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/d_hcpcs.csv.gz
  load_args:
    index_col: code

mimic.raw@hosp_d_icd_diagnoses:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/d_icd_diagnoses.csv.gz
  load_args:
    index_col: icd_code

mimic.raw@hosp_d_icd_procedures:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/d_icd_procedures.csv.gz
  load_args:
    index_col: icd_code

mimic.raw@hosp_d_labitems:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/d_labitems.csv.gz
  load_args:
    index_col: itemid

mimic.raw@hosp_diagnoses_icd:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/diagnoses_icd.csv.gz
  load_args:
    dtype:
      subject_id: int32
      hadm_id: int32

mimic.raw@hosp_drgcodes:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/drgcodes.csv.gz
  load_args:
    dtype:
      subject_id: int32
      hadm_id: int32
      drg_type: category
      drg_severity: category
      drg_mortality: category

mimic.raw@hosp_emar:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/emar.csv.gz
  load_args:
    parse_dates: [scheduletime, storetime, charttime]
    dtype:
      subject_id: int32
      hadm_id: Int32
      pharmacy_id: Int32

mimic.raw@hosp_emar_detail:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/emar_detail.csv.gz
  load_args:
    # engine: c
    # nrows: 10000000
    dtype:
      subject_id: int32
      emar_id: object
      emar_seq: int32
      parent_field_ordinal: float32
      administration_type: category
      pharmacy_id: Int32
      barcode_type: category
      reason_for_no_barcode: object
      complete_dose_not_given: category
      dose_due: category
      dose_due_unit: category
      dose_given: category
      dose_given_unit: category
      will_remainder_of_dose_be_given: category
      product_amount_given: category
      product_unit: category
      product_code: category
      product_description: object
      product_description_other: category
      prior_infusion_rate: category
      infusion_rate: category
      infusion_rate_adjustment: category
      infusion_rate_adjustment_amount: category
      infusion_rate_unit: category
      route: category
      infusion_complete: category
      completion_interval: category
      new_iv_bag_hung: category
      continued_infusion_in_other_location: category
      restart_interval: category
      side: category
      site: category
      non_formulary_visual_verification: category

mimic.raw@hosp_hcpcsevents:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/hcpcsevents.csv.gz
  load_args:
    parse_dates: [chartdate]
    dtype:
      subject_id: int32
      hadm_id: int32
      hcpcs_cd: category
      seq_num: int32

mimic.raw@hosp_labevents:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/labevents.csv.gz
  load_args:
    index_col: labevent_id
    parse_dates: [storetime, charttime]
    dtype:
      labevent_id: int32
      subject_id: int32
      hadm_id: Int32
      itemid: category
      flag: category
      value: category
      valuenum: category
      valueuom: category
      ref_range_lower: category
      ref_range_upper: category
      priority: category
      comments: category

mimic.raw@hosp_microbiologyevents:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/microbiologyevents.csv.gz
  load_args:
    index_col: microevent_id
    parse_dates: [chartdate, charttime, storedate, storetime]
    dtype:
      microevent_id: int32
      subject_id: int32
      hadm_id: Int32
      micro_specimen_id: int32
      ab_itemid: Int32
      isolate_num: Int32
      org_itemid: Int32
      interpretation: category
      quantity: object
      comments: object

mimic.raw@hosp_pharmacy:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/pharmacy.csv.gz
  load_args:
    parse_dates: [starttime, stoptime, entertime, verifiedtime, expirationdate]
    dtype:
      subject_id: int32
      hadm_id: int32
      pharmacy_id: int32
      lockout_interval: object
      one_hr_max: object
      fill_quantity: object

mimic.raw@hosp_poe:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/poe.csv.gz
  load_args:
    index_col: poe_id
    parse_dates: [ordertime]
    dtype:
      subject_id: int32
      hadm_id: int32
      order_status: category
      transaction_type: category
      order_subtype: category
      order_type: category

mimic.raw@hosp_poe_detail:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/poe_detail.csv.gz
  load_args:
    index_col: poe_id
    dtype:
      poe_seq: int32
      subject_id: int32
      field_name: category

mimic.raw@hosp_prescriptions:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/prescriptions.csv.gz
  load_args:
    parse_dates: [starttime, stoptime]
    dtype:
      subject_id: int32
      hadm_id: int32
      pharmacy_id: Int32
      gsn: object
      form_unit_disp: category
      drug_type: category
      dose_unit_rx: category
      form_rx: category
      doses_per_24_hrs: category
      route: category

mimic.raw@hosp_procedures_icd:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/procedures_icd.csv.gz
  load_args:
    parse_dates: [chartdate]
    dtype:
      subject_id: int32
      hadm_id: int32
      seq_num: int32
      icd_version: category

mimic.raw@hosp_services:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/hosp/services.csv.gz
  load_args:
    parse_dates: [transfertime]
    dtype:
      subject_id: int32
      hadm_id: int32
      prev_service: category
      curr_service: category

mimic.raw@icu_chartevents:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/icu/chartevents.csv
  load_args:
    parse_dates: [charttime, storetime]
    dtype:
      subject_id: int32
      hadm_id: int32
      stay_id: int32
      itemid: category
      value: object
      valuenum: float32
      valueuom: category
      warning: bool

mimic.raw@icu_datetimeevents:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/icu/datetimeevents.csv.gz
  load_args:
    parse_dates: [charttime, storetime, value]
    dtype:
      subject_id: int32
      hadm_id: int32
      stay_id: int32
      itemid: category
      valueuom: category
      warning: bool

mimic.raw@icu_d_items:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/icu/d_items.csv.gz
  load_args:
    index_col: itemid
    dtype:
      itemid: int32

mimic.raw@icu_icustays:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/icu/icustays.csv.gz
  load_args:
    index_col: stay_id
    parse_dates: [intime, outtime]
    dtype:
      subject_id: int32
      hadm_id: int32
      stay_id: int32
      first_careunit: category
      last_careunit: category

mimic.raw@icu_inputevents:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/icu/inputevents.csv.gz
  load_args:
    parse_dates: [starttime, endtime, storetime] #, comments_date]
    dtype:
      subject_id: int32
      hadm_id: int32
      stay_id: int32
      icustay_id: int32
      itemid: category
      amountuom: category
      rateuom: category
      ordercategoryname: category
      secondaryordercategoryname: category
      ordercomponenttypedescription: category
      ordercategorydescription: category
      totalamountuom: category
      isopenbag: bool
      continueinnextdept: category
      cancelreason: category
      statusdescription: category

mimic.raw@icu_outputevents:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/icu/outputevents.csv.gz
  load_args:
    parse_dates: [charttime, storetime]
    dtype:
      subject_id: int32
      hadm_id: int32
      stay_id: int32
      itemid: category
      valueom: category

mimic.raw@icu_procedureevents:
  <<: *mimic_csv
  filepath: ${base_location}/raw/mimiciv_1_0/icu/procedureevents.csv.gz
  load_args:
    parse_dates: [starttime, endtime, storetime, comments_date]
    dtype:
      subject_id: int32
      hadm_id: int32
      stay_id: int32
      itemid: category
      valueuom: category
      locationcategory: category
      ordercategoryname: category
      secondaryordercategoryname: category
      ordercategorydescription: category
      isopenbag: bool
      continueinnextdept: category
      cancelreason: category
      statusdescription: category
      original_rate: category

#
# interim
#
_mimic_pq: &mimic_pq
  type: pandas.ParquetDataSet
  layer: interim
  filepath: ""

mimic.core_patients:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/core/patients.pq

mimic.core_transfers:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/core/transfers.pq

mimic.core_admissions:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/core/admissions.pq

mimic.hosp_d_hcpcs:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/d_hcpcs.pq

mimic.hosp_diagnoses_icd:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/diagnoses_icd.pq

mimic.hosp_d_icd_diagnoses:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/d_icd_diagnoses.pq

mimic.hosp_d_icd_procedures:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/d_icd_procedures.pq

mimic.hosp_d_labitems:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/d_labitems.pq

mimic.hosp_drgcodes:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/drgcodes.pq

mimic.hosp_emar:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/emar.pq

mimic.hosp_emar_detail:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/emar_detail.pq

mimic.hosp_hcpcsevents:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/hcpcsevents.pq

mimic.hosp_labevents:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/labevents.pq

mimic.hosp_microbiologyevents:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/microbiologyevents.pq

mimic.hosp_pharmacy:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/pharmacy.pq

mimic.hosp_poe:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/poe.pq

mimic.hosp_poe_detail:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/poe_detail.pq

mimic.hosp_prescriptions:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/prescriptions.pq

mimic.hosp_procedures_icd:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/procedures_icd.pq

mimic.hosp_services:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/hosp/services.pq

mimic.icu_chartevents:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/icu/chartevents.pq

mimic.icu_datetimeevents:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/icu/datetimeevents.pq

mimic.icu_d_items:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/icu/d_items.pq

mimic.icu_icustays:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/icu/icustays.pq

mimic.icu_inputevents:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/icu/inputevents.pq

mimic.icu_outputevents:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/icu/outputevents.pq

mimic.icu_procedureevents:
  <<: *mimic_pq
  filepath: ${base_location}/orig/interim/mimic/icu/procedureevents.pq

#
# Keys
#
_mimic_keys: &mimic_keys
  type: pandas.ParquetDataSet
  layer: keys
  filepath: ""

mimic.keys_wrk:
  <<: *mimic_keys
  filepath: ${base_location}/orig/keys/mimic/keys.wrk.pq

mimic.keys_ref:
  <<: *mimic_keys
  filepath: ${base_location}/orig/keys/mimic/keys.ref.pq

mimic.keys_dev:
  <<: *mimic_keys
  filepath: ${base_location}/orig/keys/mimic/keys.dev.pq

mimic.keys_val:
  <<: *mimic_keys
  filepath: ${base_location}/orig/keys/mimic/keys.val.pq
